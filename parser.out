Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> expression
Rule 2     program -> program expression
Rule 3     expression -> variable_declaration
Rule 4     expression -> variable_assignment
Rule 5     expression -> main_function
Rule 6     expression -> function_definition
Rule 7     expression -> if_statement
Rule 8     expression -> while_statement
Rule 9     main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN
Rule 10    function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN
Rule 11    imp_statement -> IMP IDENTIFICADOR PUNTOYCOMA
Rule 12    imp_statement -> IMP PUNTOYCOMA
Rule 13    variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor
Rule 14    variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO
Rule 15    variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor
Rule 16    valor -> NUMERO
Rule 17    valor -> STRING
Rule 18    if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement RPAREN
Rule 19    condition -> IDENTIFICADOR GT IDENTIFICADOR
Rule 20    condition -> IDENTIFICADOR GT NUMERO
Rule 21    condition -> NUMERO GT IDENTIFICADOR
Rule 22    condition -> IDENTIFICADOR LT IDENTIFICADOR
Rule 23    condition -> IDENTIFICADOR LT NUMERO
Rule 24    condition -> NUMERO LT IDENTIFICADOR
Rule 25    condition -> IDENTIFICADOR EQ IDENTIFICADOR
Rule 26    condition -> IDENTIFICADOR EQ NUMERO
Rule 27    condition -> NUMERO EQ IDENTIFICADOR
Rule 28    while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN

Terminals, with rules where they appear

EQ                   : 25 26 27
FUN                  : 9 10
FUNCION              : 10
GT                   : 19 20 21
IDENTIFICADOR        : 11 13 14 15 19 19 20 21 22 22 23 24 25 25 26 27 28
IGUAL                : 13 15
IMP                  : 11 12
INCREMENTO           : 28
LBRACE               : 18 28
LBRACKET             : 9 10
LPAREN               : 9 10 18 28
LT                   : 22 23 24
MALPH                : 9
NUMERO               : 16 20 21 23 24 26 27
PUNTOYCOMA           : 11 12 13 14 15 28
RBRACE               : 18 28
RBRACKET             : 9 10
RPAREN               : 9 10 18 28
STRING               : 17
TIPO                 : 13 14 15
VI                   : 18
WAR                  : 28
error                : 

Nonterminals, with rules where they appear

condition            : 18 28
expression           : 1 2
function_definition  : 6
if_statement         : 7
imp_statement        : 9 10 18 28
main_function        : 5
program              : 2 0
valor                : 13 15
variable_assignment  : 4
variable_declaration : 3
while_statement      : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . expression
    (2) program -> . program expression
    (3) expression -> . variable_declaration
    (4) expression -> . variable_assignment
    (5) expression -> . main_function
    (6) expression -> . function_definition
    (7) expression -> . if_statement
    (8) expression -> . while_statement
    (13) variable_declaration -> . IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor
    (14) variable_declaration -> . IDENTIFICADOR PUNTOYCOMA TIPO
    (15) variable_assignment -> . IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor
    (9) main_function -> . FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN
    (10) function_definition -> . FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN
    (18) if_statement -> . VI LBRACE condition RBRACE LPAREN imp_statement RPAREN
    (28) while_statement -> . WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN

    IDENTIFICADOR   shift and go to state 9
    FUN             shift and go to state 10
    VI              shift and go to state 11
    WAR             shift and go to state 12

    program                        shift and go to state 1
    expression                     shift and go to state 2
    variable_declaration           shift and go to state 3
    variable_assignment            shift and go to state 4
    main_function                  shift and go to state 5
    function_definition            shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8

state 1

    (0) S' -> program .
    (2) program -> program . expression
    (3) expression -> . variable_declaration
    (4) expression -> . variable_assignment
    (5) expression -> . main_function
    (6) expression -> . function_definition
    (7) expression -> . if_statement
    (8) expression -> . while_statement
    (13) variable_declaration -> . IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor
    (14) variable_declaration -> . IDENTIFICADOR PUNTOYCOMA TIPO
    (15) variable_assignment -> . IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor
    (9) main_function -> . FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN
    (10) function_definition -> . FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN
    (18) if_statement -> . VI LBRACE condition RBRACE LPAREN imp_statement RPAREN
    (28) while_statement -> . WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN

    IDENTIFICADOR   shift and go to state 9
    FUN             shift and go to state 10
    VI              shift and go to state 11
    WAR             shift and go to state 12

    expression                     shift and go to state 13
    variable_declaration           shift and go to state 3
    variable_assignment            shift and go to state 4
    main_function                  shift and go to state 5
    function_definition            shift and go to state 6
    if_statement                   shift and go to state 7
    while_statement                shift and go to state 8

state 2

    (1) program -> expression .

    IDENTIFICADOR   reduce using rule 1 (program -> expression .)
    FUN             reduce using rule 1 (program -> expression .)
    VI              reduce using rule 1 (program -> expression .)
    WAR             reduce using rule 1 (program -> expression .)
    $end            reduce using rule 1 (program -> expression .)


state 3

    (3) expression -> variable_declaration .

    IDENTIFICADOR   reduce using rule 3 (expression -> variable_declaration .)
    FUN             reduce using rule 3 (expression -> variable_declaration .)
    VI              reduce using rule 3 (expression -> variable_declaration .)
    WAR             reduce using rule 3 (expression -> variable_declaration .)
    $end            reduce using rule 3 (expression -> variable_declaration .)


state 4

    (4) expression -> variable_assignment .

    IDENTIFICADOR   reduce using rule 4 (expression -> variable_assignment .)
    FUN             reduce using rule 4 (expression -> variable_assignment .)
    VI              reduce using rule 4 (expression -> variable_assignment .)
    WAR             reduce using rule 4 (expression -> variable_assignment .)
    $end            reduce using rule 4 (expression -> variable_assignment .)


state 5

    (5) expression -> main_function .

    IDENTIFICADOR   reduce using rule 5 (expression -> main_function .)
    FUN             reduce using rule 5 (expression -> main_function .)
    VI              reduce using rule 5 (expression -> main_function .)
    WAR             reduce using rule 5 (expression -> main_function .)
    $end            reduce using rule 5 (expression -> main_function .)


state 6

    (6) expression -> function_definition .

    IDENTIFICADOR   reduce using rule 6 (expression -> function_definition .)
    FUN             reduce using rule 6 (expression -> function_definition .)
    VI              reduce using rule 6 (expression -> function_definition .)
    WAR             reduce using rule 6 (expression -> function_definition .)
    $end            reduce using rule 6 (expression -> function_definition .)


state 7

    (7) expression -> if_statement .

    IDENTIFICADOR   reduce using rule 7 (expression -> if_statement .)
    FUN             reduce using rule 7 (expression -> if_statement .)
    VI              reduce using rule 7 (expression -> if_statement .)
    WAR             reduce using rule 7 (expression -> if_statement .)
    $end            reduce using rule 7 (expression -> if_statement .)


state 8

    (8) expression -> while_statement .

    IDENTIFICADOR   reduce using rule 8 (expression -> while_statement .)
    FUN             reduce using rule 8 (expression -> while_statement .)
    VI              reduce using rule 8 (expression -> while_statement .)
    WAR             reduce using rule 8 (expression -> while_statement .)
    $end            reduce using rule 8 (expression -> while_statement .)


state 9

    (13) variable_declaration -> IDENTIFICADOR . PUNTOYCOMA TIPO IGUAL valor
    (14) variable_declaration -> IDENTIFICADOR . PUNTOYCOMA TIPO
    (15) variable_assignment -> IDENTIFICADOR . PUNTOYCOMA TIPO IGUAL valor

    PUNTOYCOMA      shift and go to state 14


state 10

    (9) main_function -> FUN . MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN
    (10) function_definition -> FUN . FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN

    MALPH           shift and go to state 15
    FUNCION         shift and go to state 16


state 11

    (18) if_statement -> VI . LBRACE condition RBRACE LPAREN imp_statement RPAREN

    LBRACE          shift and go to state 17


state 12

    (28) while_statement -> WAR . LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN

    LBRACE          shift and go to state 18


state 13

    (2) program -> program expression .

    IDENTIFICADOR   reduce using rule 2 (program -> program expression .)
    FUN             reduce using rule 2 (program -> program expression .)
    VI              reduce using rule 2 (program -> program expression .)
    WAR             reduce using rule 2 (program -> program expression .)
    $end            reduce using rule 2 (program -> program expression .)


state 14

    (13) variable_declaration -> IDENTIFICADOR PUNTOYCOMA . TIPO IGUAL valor
    (14) variable_declaration -> IDENTIFICADOR PUNTOYCOMA . TIPO
    (15) variable_assignment -> IDENTIFICADOR PUNTOYCOMA . TIPO IGUAL valor

    TIPO            shift and go to state 19


state 15

    (9) main_function -> FUN MALPH . LBRACKET RBRACKET LPAREN imp_statement RPAREN

    LBRACKET        shift and go to state 20


state 16

    (10) function_definition -> FUN FUNCION . LBRACKET RBRACKET LPAREN imp_statement RPAREN

    LBRACKET        shift and go to state 21


state 17

    (18) if_statement -> VI LBRACE . condition RBRACE LPAREN imp_statement RPAREN
    (19) condition -> . IDENTIFICADOR GT IDENTIFICADOR
    (20) condition -> . IDENTIFICADOR GT NUMERO
    (21) condition -> . NUMERO GT IDENTIFICADOR
    (22) condition -> . IDENTIFICADOR LT IDENTIFICADOR
    (23) condition -> . IDENTIFICADOR LT NUMERO
    (24) condition -> . NUMERO LT IDENTIFICADOR
    (25) condition -> . IDENTIFICADOR EQ IDENTIFICADOR
    (26) condition -> . IDENTIFICADOR EQ NUMERO
    (27) condition -> . NUMERO EQ IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 23
    NUMERO          shift and go to state 24

    condition                      shift and go to state 22

state 18

    (28) while_statement -> WAR LBRACE . condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN
    (19) condition -> . IDENTIFICADOR GT IDENTIFICADOR
    (20) condition -> . IDENTIFICADOR GT NUMERO
    (21) condition -> . NUMERO GT IDENTIFICADOR
    (22) condition -> . IDENTIFICADOR LT IDENTIFICADOR
    (23) condition -> . IDENTIFICADOR LT NUMERO
    (24) condition -> . NUMERO LT IDENTIFICADOR
    (25) condition -> . IDENTIFICADOR EQ IDENTIFICADOR
    (26) condition -> . IDENTIFICADOR EQ NUMERO
    (27) condition -> . NUMERO EQ IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 23
    NUMERO          shift and go to state 24

    condition                      shift and go to state 25

state 19

    (13) variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO . IGUAL valor
    (14) variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO .
    (15) variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO . IGUAL valor

    IGUAL           shift and go to state 26
    IDENTIFICADOR   reduce using rule 14 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO .)
    FUN             reduce using rule 14 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO .)
    VI              reduce using rule 14 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO .)
    WAR             reduce using rule 14 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO .)
    $end            reduce using rule 14 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO .)


state 20

    (9) main_function -> FUN MALPH LBRACKET . RBRACKET LPAREN imp_statement RPAREN

    RBRACKET        shift and go to state 27


state 21

    (10) function_definition -> FUN FUNCION LBRACKET . RBRACKET LPAREN imp_statement RPAREN

    RBRACKET        shift and go to state 28


state 22

    (18) if_statement -> VI LBRACE condition . RBRACE LPAREN imp_statement RPAREN

    RBRACE          shift and go to state 29


state 23

    (19) condition -> IDENTIFICADOR . GT IDENTIFICADOR
    (20) condition -> IDENTIFICADOR . GT NUMERO
    (22) condition -> IDENTIFICADOR . LT IDENTIFICADOR
    (23) condition -> IDENTIFICADOR . LT NUMERO
    (25) condition -> IDENTIFICADOR . EQ IDENTIFICADOR
    (26) condition -> IDENTIFICADOR . EQ NUMERO

    GT              shift and go to state 30
    LT              shift and go to state 31
    EQ              shift and go to state 32


state 24

    (21) condition -> NUMERO . GT IDENTIFICADOR
    (24) condition -> NUMERO . LT IDENTIFICADOR
    (27) condition -> NUMERO . EQ IDENTIFICADOR

    GT              shift and go to state 33
    LT              shift and go to state 34
    EQ              shift and go to state 35


state 25

    (28) while_statement -> WAR LBRACE condition . RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN

    RBRACE          shift and go to state 36


state 26

    (13) variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL . valor
    (15) variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL . valor
    (16) valor -> . NUMERO
    (17) valor -> . STRING

    NUMERO          shift and go to state 38
    STRING          shift and go to state 39

    valor                          shift and go to state 37

state 27

    (9) main_function -> FUN MALPH LBRACKET RBRACKET . LPAREN imp_statement RPAREN

    LPAREN          shift and go to state 40


state 28

    (10) function_definition -> FUN FUNCION LBRACKET RBRACKET . LPAREN imp_statement RPAREN

    LPAREN          shift and go to state 41


state 29

    (18) if_statement -> VI LBRACE condition RBRACE . LPAREN imp_statement RPAREN

    LPAREN          shift and go to state 42


state 30

    (19) condition -> IDENTIFICADOR GT . IDENTIFICADOR
    (20) condition -> IDENTIFICADOR GT . NUMERO

    IDENTIFICADOR   shift and go to state 43
    NUMERO          shift and go to state 44


state 31

    (22) condition -> IDENTIFICADOR LT . IDENTIFICADOR
    (23) condition -> IDENTIFICADOR LT . NUMERO

    IDENTIFICADOR   shift and go to state 45
    NUMERO          shift and go to state 46


state 32

    (25) condition -> IDENTIFICADOR EQ . IDENTIFICADOR
    (26) condition -> IDENTIFICADOR EQ . NUMERO

    IDENTIFICADOR   shift and go to state 47
    NUMERO          shift and go to state 48


state 33

    (21) condition -> NUMERO GT . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 49


state 34

    (24) condition -> NUMERO LT . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 50


state 35

    (27) condition -> NUMERO EQ . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 51


state 36

    (28) while_statement -> WAR LBRACE condition RBRACE . LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN

    LPAREN          shift and go to state 52


state 37

    (13) variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .
    (15) variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
  ! reduce/reduce conflict for FUN resolved using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
  ! reduce/reduce conflict for VI resolved using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
  ! reduce/reduce conflict for WAR resolved using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
  ! reduce/reduce conflict for $end resolved using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
    IDENTIFICADOR   reduce using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
    FUN             reduce using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
    VI              reduce using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
    WAR             reduce using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)
    $end            reduce using rule 13 (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .)

  ! IDENTIFICADOR   [ reduce using rule 15 (variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .) ]
  ! FUN             [ reduce using rule 15 (variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .) ]
  ! VI              [ reduce using rule 15 (variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .) ]
  ! WAR             [ reduce using rule 15 (variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .) ]
  ! $end            [ reduce using rule 15 (variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor .) ]


state 38

    (16) valor -> NUMERO .

    IDENTIFICADOR   reduce using rule 16 (valor -> NUMERO .)
    FUN             reduce using rule 16 (valor -> NUMERO .)
    VI              reduce using rule 16 (valor -> NUMERO .)
    WAR             reduce using rule 16 (valor -> NUMERO .)
    $end            reduce using rule 16 (valor -> NUMERO .)


state 39

    (17) valor -> STRING .

    IDENTIFICADOR   reduce using rule 17 (valor -> STRING .)
    FUN             reduce using rule 17 (valor -> STRING .)
    VI              reduce using rule 17 (valor -> STRING .)
    WAR             reduce using rule 17 (valor -> STRING .)
    $end            reduce using rule 17 (valor -> STRING .)


state 40

    (9) main_function -> FUN MALPH LBRACKET RBRACKET LPAREN . imp_statement RPAREN
    (11) imp_statement -> . IMP IDENTIFICADOR PUNTOYCOMA
    (12) imp_statement -> . IMP PUNTOYCOMA

    IMP             shift and go to state 54

    imp_statement                  shift and go to state 53

state 41

    (10) function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN . imp_statement RPAREN
    (11) imp_statement -> . IMP IDENTIFICADOR PUNTOYCOMA
    (12) imp_statement -> . IMP PUNTOYCOMA

    IMP             shift and go to state 54

    imp_statement                  shift and go to state 55

state 42

    (18) if_statement -> VI LBRACE condition RBRACE LPAREN . imp_statement RPAREN
    (11) imp_statement -> . IMP IDENTIFICADOR PUNTOYCOMA
    (12) imp_statement -> . IMP PUNTOYCOMA

    IMP             shift and go to state 54

    imp_statement                  shift and go to state 56

state 43

    (19) condition -> IDENTIFICADOR GT IDENTIFICADOR .

    RBRACE          reduce using rule 19 (condition -> IDENTIFICADOR GT IDENTIFICADOR .)


state 44

    (20) condition -> IDENTIFICADOR GT NUMERO .

    RBRACE          reduce using rule 20 (condition -> IDENTIFICADOR GT NUMERO .)


state 45

    (22) condition -> IDENTIFICADOR LT IDENTIFICADOR .

    RBRACE          reduce using rule 22 (condition -> IDENTIFICADOR LT IDENTIFICADOR .)


state 46

    (23) condition -> IDENTIFICADOR LT NUMERO .

    RBRACE          reduce using rule 23 (condition -> IDENTIFICADOR LT NUMERO .)


state 47

    (25) condition -> IDENTIFICADOR EQ IDENTIFICADOR .

    RBRACE          reduce using rule 25 (condition -> IDENTIFICADOR EQ IDENTIFICADOR .)


state 48

    (26) condition -> IDENTIFICADOR EQ NUMERO .

    RBRACE          reduce using rule 26 (condition -> IDENTIFICADOR EQ NUMERO .)


state 49

    (21) condition -> NUMERO GT IDENTIFICADOR .

    RBRACE          reduce using rule 21 (condition -> NUMERO GT IDENTIFICADOR .)


state 50

    (24) condition -> NUMERO LT IDENTIFICADOR .

    RBRACE          reduce using rule 24 (condition -> NUMERO LT IDENTIFICADOR .)


state 51

    (27) condition -> NUMERO EQ IDENTIFICADOR .

    RBRACE          reduce using rule 27 (condition -> NUMERO EQ IDENTIFICADOR .)


state 52

    (28) while_statement -> WAR LBRACE condition RBRACE LPAREN . imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN
    (11) imp_statement -> . IMP IDENTIFICADOR PUNTOYCOMA
    (12) imp_statement -> . IMP PUNTOYCOMA

    IMP             shift and go to state 54

    imp_statement                  shift and go to state 57

state 53

    (9) main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement . RPAREN

    RPAREN          shift and go to state 58


state 54

    (11) imp_statement -> IMP . IDENTIFICADOR PUNTOYCOMA
    (12) imp_statement -> IMP . PUNTOYCOMA

    IDENTIFICADOR   shift and go to state 59
    PUNTOYCOMA      shift and go to state 60


state 55

    (10) function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement . RPAREN

    RPAREN          shift and go to state 61


state 56

    (18) if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement . RPAREN

    RPAREN          shift and go to state 62


state 57

    (28) while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement . INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN

    INCREMENTO      shift and go to state 63


state 58

    (9) main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN .

    IDENTIFICADOR   reduce using rule 9 (main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    FUN             reduce using rule 9 (main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    VI              reduce using rule 9 (main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    WAR             reduce using rule 9 (main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    $end            reduce using rule 9 (main_function -> FUN MALPH LBRACKET RBRACKET LPAREN imp_statement RPAREN .)


state 59

    (11) imp_statement -> IMP IDENTIFICADOR . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 64


state 60

    (12) imp_statement -> IMP PUNTOYCOMA .

    RPAREN          reduce using rule 12 (imp_statement -> IMP PUNTOYCOMA .)
    INCREMENTO      reduce using rule 12 (imp_statement -> IMP PUNTOYCOMA .)


state 61

    (10) function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN .

    IDENTIFICADOR   reduce using rule 10 (function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    FUN             reduce using rule 10 (function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    VI              reduce using rule 10 (function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    WAR             reduce using rule 10 (function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN .)
    $end            reduce using rule 10 (function_definition -> FUN FUNCION LBRACKET RBRACKET LPAREN imp_statement RPAREN .)


state 62

    (18) if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement RPAREN .

    IDENTIFICADOR   reduce using rule 18 (if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement RPAREN .)
    FUN             reduce using rule 18 (if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement RPAREN .)
    VI              reduce using rule 18 (if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement RPAREN .)
    WAR             reduce using rule 18 (if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement RPAREN .)
    $end            reduce using rule 18 (if_statement -> VI LBRACE condition RBRACE LPAREN imp_statement RPAREN .)


state 63

    (28) while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO . IDENTIFICADOR PUNTOYCOMA RPAREN

    IDENTIFICADOR   shift and go to state 65


state 64

    (11) imp_statement -> IMP IDENTIFICADOR PUNTOYCOMA .

    RPAREN          reduce using rule 11 (imp_statement -> IMP IDENTIFICADOR PUNTOYCOMA .)
    INCREMENTO      reduce using rule 11 (imp_statement -> IMP IDENTIFICADOR PUNTOYCOMA .)


state 65

    (28) while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR . PUNTOYCOMA RPAREN

    PUNTOYCOMA      shift and go to state 66


state 66

    (28) while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA . RPAREN

    RPAREN          shift and go to state 67


state 67

    (28) while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN .

    IDENTIFICADOR   reduce using rule 28 (while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN .)
    FUN             reduce using rule 28 (while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN .)
    VI              reduce using rule 28 (while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN .)
    WAR             reduce using rule 28 (while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN .)
    $end            reduce using rule 28 (while_statement -> WAR LBRACE condition RBRACE LPAREN imp_statement INCREMENTO IDENTIFICADOR PUNTOYCOMA RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 37 resolved using rule (variable_declaration -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor)
WARNING: rejected rule (variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor) in state 37
WARNING: Rule (variable_assignment -> IDENTIFICADOR PUNTOYCOMA TIPO IGUAL valor) is never reduced
